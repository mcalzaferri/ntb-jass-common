@startuml
skinparam dpi 100
skinparam shadowing false

[*] --> init
init --> lobby
init --> handleJoinLeave

state "wait for players" as lobby {
      state "wait for message" as waitForMsg
      state "add player to table" as addPlayerToTable : broadcast **PlayerMovedToTableInfoMessage**
      state "set players ready state" as setPlayerReadyState : broadcast **PlayerChangedStateMessage**

      [*] --> waitForMsg
      waitForMsg --> addPlayerToTable : **JoinTableMessage**\nreceived
      waitForMsg --> setPlayerReadyState : **ChangeStateMessage**\nreceived
      addPlayerToTable --> waitForMsg
      setPlayerReadyState --> waitForMsg
      setPlayerReadyState --> [*] : all players ready
}

lobby --> play

state "play" as play {
      state "start game" as startGame : broadcast **GameStartedInfoMessage**
      state "hand out cards" as handOut : \
      broadcast **NewRoundInfoMessage**\nsend **HandOutCardsMessage** to each player
      state "wait for trump" as waitTrump : send **ChooseTrumpMessage** to player
      state "wait for card" as waitForCard
      state "set trump" as setTrump : broadcast **ChosenTrumpInfoMessage**
      state "check trump" as checkTrump
      state "request card" as requestCard : broadcast **NewTurnInfoMessage**
      state "check card" as checkCard
      state "accept card" as acceptCard : \
      broadcast **TurnInfoMessage**\nor **StichInfoMessage**
      state "discard card" as discardCard : send **WrongCardMessage** to player
      state "handle wiis" as handleWiis : broadcast **WiisInfoMessage**
      state "round over" as roundOver : broadcast **EndOfRoundInfoMessage**

      [*] --> startGame
      startGame --> handOut
      handOut --> waitTrump
      waitTrump --> checkTrump : **ChosenTrumpMessage**\nreceived
      checkTrump --> waitTrump : schieben
      checkTrump --> setTrump
      setTrump --> requestCard
      requestCard --> waitForCard
      waitForCard --> checkCard : **PlaceCardMessage**\nreceived
      waitForCard --> handleWiis : first round and\n**ChosenWiisMessage**\nreceived
      handleWiis --> waitForCard
      checkCard --> acceptCard : card valid
      acceptCard --> requestCard
      checkCard --> discardCard : card invalid
      discardCard --> waitForCard
      acceptCard --> roundOver : all cards played
      roundOver --> handOut
      roundOver --> [*] : score of one team >= score limit
}

state "game over" as gameOver : \
broadcast **PlayerMovedToLobbyInfoMessage** x 4\n\
set ready state of all players to false

play --> gameOver
gameOver -up-> init


state "handle joining/leaving players" as handleJoinLeave {
      state "wait for message" as waitForJoinLeave
      state "add player to lobby" as addPlayerToLobby : \
      send **GameStateMessage**\nor **LobbyStateMessage** to joined player\nbroadcast **PlayerMovedToLobbyInfoMessage**
      state "remove player from lobby" as removePlayerFromLobby : broadcast **PlayerLeftLobbyInfoMessage**
      state "remove player from table" as removePlayerFromTable : broadcast **PlayerMovedToLobbyInfoMessage**
      state "round over" as roundOver2 : broadcast **EndOfRoundInfoMessage**

      [*] --> waitForJoinLeave
      waitForJoinLeave -left-> addPlayerToLobby : **JoinLobbyMessage**\nreceived
      addPlayerToLobby --> waitForJoinLeave
      waitForJoinLeave-right-> removePlayerFromLobby : **LeaveLobbyMessage**\nreceived
      removePlayerFromLobby --> waitForJoinLeave
      waitForJoinLeave --> removePlayerFromTable : **LeaveTableMessage**\nreceived
      removePlayerFromTable --> waitForJoinLeave
      removePlayerFromTable --> roundOver2 : game ongoing
      roundOver2 --> [*]
}

handleJoinLeave --> gameOver

@enduml
